<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use App\Inventory;
use App\Category;
use App\Glo;
use DateTime;
use Config;
use Illuminate\Support\Facades\Crypt;
use App\GibberishAES;


class MovieController extends Controller
{
    //go to movie detail:
    public function movieDetail(Request $request, $slug){
        //get current day:
        $currentDay = new DateTime();
        $detail = Inventory::where('slug','=',$slug)->first();
        if(!empty($detail)){
            //get category:
            $category = Category::where('categoryid',$detail->categoryid)->first();
            //get global:
            $global = Glo::where('globalid',$detail->globalid)->first();
            //get related movie:
            $relates = Inventory::where('categoryid','=',$detail->categoryid)->orderByRaw('RAND()')->take(8)->orderBy('created', 'desc')->skip(0)->get();
            //get trailer phim:
            $body = explode('https://www.youtube.com/watch?v=', $detail->trailer);
            $trailer = $body[1];
            return view('movie')->with(array('movie'=>$detail,'category'=>$category->name, 'trailer'=>$trailer, 'global'=>$global->name, 'relates'=>$relates, 'currentDay'=>$currentDay));
        }
        else{
            return redirect('/redirect/404');
        }
    }
    
    //watch movie:
    public function watch($slug){
        $movie = Inventory::where('slug',$slug)->first();
        $pass =  'phimbathu.com'.'4590481877';
        $decodes = [];
        //get movie:
        if(!empty($movie)){
            $streamLink = $movie->stream;
            $curl = $this->curl($streamLink);
            $id = $this->getIdMovie($curl);
            $links = $this->getVideos($curl);
            //check decode:
            if(!empty($links)){
                foreach($links as $link){
                    error_log('=== DECODE===');
                    $decode = GibberishAES::dec($link, $pass.$id);
                    if(!empty($decode)){
                        array_push($decodes,$decode);
                    }
                }
            }
        }

        //get category:
        $category = Category::where('categoryid',$movie->categoryid)->first();
        //get global:
        $global = Glo::where('globalid',$movie->globalid)->first();

        //check link:
        if(!empty($decodes)){
            return view('watch')->with(array('movie'=>$movie,'links'=>$decodes,'category'=>$category->name,'global'=>$global->name));
        }
        else{
            return "<script>alert('Link xem chưa được cập nhật!');widow.location.href='/movie/.$slug'</script>";
        }
    }

    //get video 720 p:
    public function getVideos($curlString){
        preg_match_all("/\"file\":\"([^\"]+)(\",\"type\":\"mp4\",\"label\":\"720p\")+/", $curlString, $matches);
        $arrays = $matches[1];
        $links = [];
         //foreach:
        if(!empty($arrays)){
           //forech get value array:
           foreach($arrays as $ar){
               error_log('=======> REPLACE:'.str_replace("\\","",$ar));
               $replace = str_replace("\\","",$ar);
               if(!empty($replace)){
                   array_push($links,$replace);
               }
           }
        }
        return $links;
    }

    //get ID movie:
    public function getIdMovie($curlString){
        preg_match_all("/\"modelId\":\"(\d+)\"+/", $curlString, $matches);
        $arrays = $matches[1];
        //parse array:
        if(!empty($arrays)){
           return $arrays[0];
        }

        return null;
    }

    //curl url:
    public function curl($url){
        // Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
        $ch = curl_init();

        curl_setopt($ch, CURLOPT_URL, $url);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($ch, CURLOPT_CUSTOMREQUEST, "GET");

        curl_setopt($ch, CURLOPT_ENCODING, 'gzip, deflate');

        $headers = array();
        $headers[] = "Connection: keep-alive";
        $headers[] = "Cache-Control: max-age=0";
        $headers[] = "Upgrade-Insecure-Requests: 1";
        $headers[] = "User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36";
        $headers[] = "Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8";
        $headers[] = "Accept-Encoding: gzip, deflate";
        $headers[] = "Accept-Language: en-US,en;q=0.9";
        $headers[] = "Cookie: ADB3rdCookie1478681307=1; __cfduid=d7cc697b22eec47b7abaf77f7a799dc491532963271; proxy_s_sv=1532965073811; ADB3rdCookie1478681307=1; __utma=247746630.713043224.1532963275.1532963275.1532963275.1; __utmc=247746630; __utmz=247746630.1532963275.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none); __utmt=1; __utmt_b=1; CLIENT_IP6=; CLIENT_IPV6=; CLIENT_PROXY_OUT=; CLIENT_COUNTRY=VN; __RC=5; __R=3; __UF=-1; __tb=0; MarketGidStorage=%7B%220%22%3A%7B%22svspr%22%3A%22%22%2C%22svsds%22%3A3%2C%22TejndEEDj%22%3A%22JtnNLH.Id%22%7D%2C%22C108814%22%3A%7B%22page%22%3A3%2C%22time%22%3A1532963284735%7D%7D; lastview=1532963284; __uif=__uid%3A8332963275712118822%7C__create%3A1532963275; _ym_uid=1532963288614237774; _ym_d=1532963288; _ym_isad=2; __utmb=247746630.24.0.1532963290655";
        curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

        $result = curl_exec($ch);
        if (curl_errno($ch)) {
            echo 'Error:' . curl_error($ch);
        }
        curl_close ($ch);

        return $result;
    }
}
